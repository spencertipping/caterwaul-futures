caterwaul.module( 'future' ,function($) { (function( ) {var static_future_methods= {array:function( /* unary , node */xs) {;
return transpose_array(xs) } ,object:function( /* unary , node */o) {;
return transpose_object(o) } ,k:function( /* unary , node */x) {;
return callback_future() (x) } } ,construct_future=function( /* unary , node */xs) {;
return xs?xs.constructor===Object?$.future.object(xs) :xs.constructor===Array?$.future.array(xs) : (function( ) {throw new Error( ( 'unrecognized argument for future constructor: ' + (xs) + '' ) ) } ) .call(this) :callback_future() } ,callback_future=function( /* unary , node */) {;
return(function( ) {var calls_its_send_method=function( /* unary , node */) {;
return(function( ) {var f=function( /* unary , node */) {;
return f.send.apply(f,arguments) } ;
return(f) } ) .call(this) } ;
return( (function(it) {return($.merge(it,future_initials_for(it) ,future_operations_for(it) ) ) ,it} ) .call(this, (calls_its_send_method() ) ) ) } ) .call(this) } ,componentwise=function(init,each) {;
return function( /* unary , node */xs) {;
return(function( ) {var result=caterwaul.future() ,received=init() ,queue= { } ,enqueue=function(k,v) {;
return(queue[k] || (queue[k] = [ ] ) ) .push(v) } ,replay_queue=function( /* unary , node */) {;
return(function(xs) {var x,x0,xi,xl,xr;
for(var xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] , ( ( (x[1] .length) && (receive(x[0] ) (x[1] .shift() ) ) ) ) ;
return xs} ) .call(this, (function(o) {var ps= [ ] ;
for(var k in o)Object.prototype.hasOwnProperty.call(o,k) &&ps.push( [k,o[k] ] ) ;
return ps} ) .call(this, (queue) ) ) } ,expected_count= (function( ) {var count=0;
return( (function(it) {return(count) } ) .call(this, (each(xs, (function(t,f) {return(function( ) {return f.call(t) } ) } ) (this, (function( ) {return++count} ) ) ) ) ) ) } ) .call(this) ,received_count=0,receive=function( /* unary , node */k) {;
return function( /* unary , node */v) {;
return received.hasOwnProperty(k) ?enqueue(k,v) : (function(it) {return( ( ( ++received_count===expected_count) && ( (function(it) {return(received=init() ,received_count=0,replay_queue() ) ,it} ) .call(this, (result(received) ) ) ) ) ) } ) .call(this, ( (received[k] =v) ) ) } } ;
return( (function(it) {return(each(xs, (function(k,v) {return(v) .push( /* unary , node */receive(k) ) } ) ) ) ,it} ) .call(this, (result) ) ) } ) .call(this) } } ,transpose_array=componentwise(function(_) {return[ ] } , (function(xs,f) {return(function(xs) {var x,x0,xi,xl,xr;
for(var xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] , (f(xi,x) ) ;
return xs} ) .call(this,xs) } ) ) ,transpose_object=componentwise(function(_) {return{ } } , (function(o,f) {return(function(xs) {var x,x0,xi,xl,xr;
for(var xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] , (f(x[0] ,x[1] ) ) ;
return xs} ) .call(this, (function(o) {var ps= [ ] ;
for(var k in o)Object.prototype.hasOwnProperty.call(o,k) &&ps.push( [k,o[k] ] ) ;
return ps} ) .call(this, (o) ) ) } ) ) ,call_vc=function(f,xs) {;
return(function( ) {var continuation_result=null,continuation=function() { /* unary ; node */var xs=arguments;
return continuation_result=Array.prototype.slice.call(xs) } ;
return( (function(it) {return(continuation_result|| [it] ) } ) .call(this, (f.apply(continuation,xs) ) ) ) } ) .call(this) } ,future_initials_for=function( /* unary , node */future) {;
return{listeners: [ ] ,decided:null} } ,future_operations_for=function( /* unary , node */future) {;
return(function( ) {var send=function() { /* unary ; node */var xs=arguments;
return(function(it) {return(it.decided=xs, (function(xs) {var x,x0,xi,xl,xr;
for(var xi=0,xl=xs.length;
xi<xl;
 ++xi)x=xs[xi] , (x.apply(future,xs) ) ;
return xs} ) .call(this,future.listeners) ) ,it} ) .call(this, (future) ) } ,push=function( /* unary , node */f) {;
return(function(it) {return( ( (future.decided) && (f.apply(future,future.decided) ) ) ) ,it} ) .call(this, ( (function(it) {return( (future.listeners) .push( /* unary , node */f) ) ,it} ) .call(this, (future) ) ) ) } ,map=function( /* unary , node */f) {;
return(function(it) {return(push(function(_) {return it.apply(it,call_vc(f,arguments) ) } ) ) ,it} ) .call(this, (callback_future() ) ) } ,flat_map=function( /* unary , node */f) {;
return(function(it) {return(map( (f) .push( /* unary , node */function(_) {return(future) .push( /* unary , node */it) } ) ) ) ,it} ) .call(this, (callback_future() ) ) } ,scan=function( /* unary , node */size) {;
return(function( ) {var xs= [ ] ,result= (function(it) {return(it.queue=function( /* unary , node */) {;
return xs} ) ,it} ) .call(this, (callback_future() ) ) ,observe=function( /* unary , node */x) {;
return(function(it) {return(check_window() ) ,it} ) .call(this, ( (xs) .push( /* unary , node */x) ) ) } ,check_window=function( /* unary , node */) {;
return( (elements.length>size) && ( (function(it) {return(result(Array.prototype.slice.call( (xs) ) ) ) ,it} ) .call(this, (xs.shift() ) ) ) ) } ;
return( (function(it) {return(push( /* unary , node */observe) ) ,it} ) .call(this, (result) ) ) } ) .call(this) } ,fold=function(f,initial) {;
return(function( ) {var result= (function(it) {return(it.state=function( /* unary , node */) {;
return initial} ) ,it} ) .call(this, (callback_future() ) ) ,observe=function( /* unary , node */x) {;
return result(initial=f(initial,x) ) } ;
return( (function(it) {return(push( /* unary , node */observe) ) ,it} ) .call(this, (result) ) ) } ) .call(this) } ,filter=function( /* unary , node */f) {;
return(function(it) {return(push( /* unary , node */function(_) {return( (f(_) ) && (it(_) ) ) } ) ) ,it} ) .call(this, (caterwaul_future() ) ) } ;
return( {send:send,push:push,map:map,flat_map:flat_map,scan:scan,fold:fold,filter:filter} ) } ) .call(this) } ;
return($.merge( ($.future=construct_future) ,static_future_methods) ) } ) .call(this) } ) ;
